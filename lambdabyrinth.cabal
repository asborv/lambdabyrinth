cabal-version:      3.0
-- Initial package description 'lambdabyrinth' generated by
-- 'cabal init'. For further documentation, see:
--   http://haskell.org/cabal/users-guide/
--

name:               lambdabyrinth

-- The package version.
-- See the Haskell package versioning policy (PVP) for standards
-- guiding when and how versions should be incremented.
-- https://pvp.haskell.org
-- PVP summary:     +-+------- breaking API changes
--                  | | +----- non-breaking API additions
--                  | | | +--- code changes with no API change
version:            0.1.0.0
synopsis:          A simple roguelike game using the Brick library.
homepage:           https://github.com/asborv/lambdabyrinth
license:            AGPL-3.0-only
license-file:       LICENSE
author:             Asbj√∏rn Olav Orvedal
maintainer:         asbjorn.orvedal@gmail.com
category:           Game
build-type:         Simple
extra-doc-files:    README.md

common warnings
    ghc-options: -Wall -threaded -Wno-unused-do-bind -Wno-type-defaults

executable lambdabyrinth
    import:           warnings
    main-is:          Main.hs
    other-modules:
        Config
        Creatures.Combatant
        Creatures.Monsters
        Creatures.Player
        Draw
        Items.Armour
        Items.Materials
        Items.Weapons
        Scenes.CreateCharacter
        Scenes.Game.Events
        Scenes.Game.Scene
        Scenes.Result
        Types
        World.Cells
        World.Level
        World.Tree
        World.WorldGeneration
    build-depends:
        base <5,
        brick,
        MonadRandom,
        containers >= 0.6.7,
        hw-prim,
        lens,
        mtl,
        optparse-applicative,
        random >= 1.2.1.2,
        split >= 0.2.5,
        text,
        vty >= 6.0,
        vty-crossplatform,
        word-wrap,
    default-extensions:
        DataKinds,
        ExistentialQuantification,
        FlexibleContexts,
        FlexibleInstances,
        InstanceSigs,
        LambdaCase,
        MultiParamTypeClasses,
        MultiWayIf,
        NamedFieldPuns,
        OverloadedStrings,
        ScopedTypeVariables,
        TemplateHaskell,
        TupleSections,
        TypeApplications,
        TypeFamilies,
    hs-source-dirs:   app
    default-language: Haskell2010
